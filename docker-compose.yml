version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: angular_starter_kit
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      - app-network
    # Uncomment for production with SSL
    # environment:
    #   - VIRTUAL_HOST=yourdomain.com
    #   - LETSENCRYPT_HOST=yourdomain.com
    #   - LETSENCRYPT_EMAIL=your-email@example.com

  # Uncomment to add an API backend
  # api:
  #   image: your-api-image
  #   container_name: api_backend
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=production
  #   networks:
  #     - app-network
  #   depends_on:
  #     - db

  # Uncomment to add a database
  # db:
  #   image: postgres:14-alpine
  #   container_name: database
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=your_password
  #     - POSTGRES_DB=your_db
  #   networks:
  #     - app-network

# Uncomment for production with SSL
# nginx-proxy:
#   image: jwilder/nginx-proxy
#   container_name: nginx-proxy
#   ports:
#     - "80:80"
#     - "443:443"
#   volumes:
#     - /var/run/docker.sock:/tmp/docker.sock:ro
#     - ./certs:/etc/nginx/certs
#     - ./vhost.d:/etc/nginx/vhost.d
#     - ./html:/usr/share/nginx/html
#   networks:
#     - app-network

# letsencrypt:
#   image: jrcs/letsencrypt-nginx-proxy-companion
#   container_name: letsencrypt
#   depends_on:
#     - nginx-proxy
#   volumes:
#     - /var/run/docker.sock:/var/run/docker.sock:ro
#     - ./certs:/etc/nginx/certs
#     - ./vhost.d:/etc/nginx/vhost.d
#     - ./html:/usr/share/nginx/html
#   networks:
#     - app-network

networks:
  app-network:
    driver: bridge

# Uncomment to add a database
# volumes:
#   db-data: